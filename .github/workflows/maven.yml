# Nome do workflow no repositório
name: Integração continua de Java com Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Jobs do ambiente de desenvolvimento
  build-dev:
    runs-on: ubuntu-latest
    environment: 
      name: dev
    steps:
    - name: Realiza o checkout do repositório
      uses: actions/checkout@v3
    - name: Configura o JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    - name: Testa o projeto com Maven
      run: mvn -B test --file pom.xml
  
  # Jobs do ambiente de homologação
  build-hmg:
    runs-on: ubuntu-latest    
    environment: 
      name: hmg
    needs: build-dev
    # Compila com diversas versões do JDK
    strategy:
      matrix: 
        java: [16, 17, 18]        
    name: build-hmg - JDK ${{matrix.java}}... 
    steps:
    - name: Realiza o checkout do repositório
      uses: actions/checkout@v3 
      with:
        fetch-depth: 0 
    - name: Configura o JDK ${{matrix.java}}
      uses: actions/setup-java@v3      
      with:
        java-version: ${{matrix.java}}
        distribution: 'temurin'
        cache: maven
    # Executa os passos da análise do código com o sonarcube     
    - name: Cache dos pacotes do SonarCloud
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache dos pacotes do Maven
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Verifica o projeto com Maven e Jacoco
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=osmarbraz_figuras_teste #Default sonarcloud
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=osmarbraz_figuras_teste org.jacoco:jacoco-maven-plugin:prepare-agent -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml 
      
  # Jobs do ambiente de produção
  build-prd:
    runs-on: ubuntu-latest
    environment: 
      name: prd
    needs: build-hmg
    steps:
    - name: Realiza o checkout do repositório
      uses: actions/checkout@v3
    - name: Configura o JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    # Executa o empacotamento do projeto com o Maven no runner    
    # O parâmetro -DskipTests pula os testes pois já foram executados no ambiente anterior.
    - name: Empacota o projeto com Maven      
      run: mvn -B package --file pom.xml -DskipTests
    # Cria o artefato de download    
    - name: Crie uma pasta temporária(stating) de downloads de artefatos
      run: mkdir staging
    - name: Copia os artefatos a serem publicados na pasta temporária(stating)
      run: cp target/*jar-with-dependencies.jar staging
    - name: Usa Upload Artifact do GitHub Action
      uses: actions/upload-artifact@v3
      with:
        # Nome do arquivo a ser gerado
        name: Package-${{  runner.os }} #.zip será adicionado automaticamente
        # Caminho da pasta temporária (stating)
        path: staging        